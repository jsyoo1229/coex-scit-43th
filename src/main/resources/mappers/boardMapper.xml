<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.softsociety.spring5.dao.BoardDAO">

<!-- 글 저장 -->
<!-- 전달된 파일명이 있을때만 originalfile, originalfile
	 컬럼에 값을 저장 -->
<insert id="insertBoard" parameterType="Board">
    insert into spring5_board (
    	boardnum
		, memberid
		, title
		, contents
		<if test="originalfile != null and savedfile != null">
		, originalfile
		, savedfile
		</if>
	)
    values (
    	spring5_board_seq.nextval
		, #{memberid}
		, #{title}
		, #{contents}
		<if test="originalfile != null and savedfile != null">
		, #{originalfile}
		, #{savedfile}
		</if>
	)
</insert>

<!-- 글목록 -->
<select id="list" parameterType="map" resultType="Board">
	select
		boardnum
		, memberid
		, title
		, hits
		, to_char(inputdate, 'yy/mm/dd') inputdate
	from 
		spring5_board
	<!-- 검색어가 null이 아니면 where 조건을 추가한다 -->
	<!-- 검색대상이 title이면 제목에서 검색한다 -->
	<!-- 검색대상이 contents이면 본문에서 검색한다 -->
	<!-- 검색대상이 memberid이면 작성자를 검색한다 -->
	<!-- 검색대상이 all이면 제목,본문,작성자를 모두 검색한다 -->
	<if test="type != null and searchWord != null">
	<where>	
		<if test="type == 'title'">
			upper(title) like '%' || upper(#{searchWord}) || '%'
		</if>
		<if test="type == 'contents'">
			upper(contents) like '%' || upper(#{searchWord}) || '%'
		</if>
		<if test="type == 'memberid'">
			memberid = #{searchWord}
		</if>
		<if test="type == 'all'">
			upper(title) like '%' || upper(#{searchWord}) || '%'
			or upper(contents) like '%' || upper(#{searchWord}) || '%'
			or memberid = #{searchWord}
		</if>
	</where>	
	</if>
	order by
		boardnum desc
</select>

<!-- 전체 글 개수 -->
<select id="total" parameterType="map" resultType="int">
	select count(*) from spring5_board
	<if test="type != null and searchWord != null">
	<where>	
		<if test="type == 'title'">
			upper(title) like '%' || upper(#{searchWord}) || '%'
		</if>
		<if test="type == 'contents'">
			upper(contents) like '%' || upper(#{searchWord}) || '%'
		</if>
		<if test="type == 'memberid'">
			memberid = #{searchWord}
		</if>
		<if test="type == 'all'">
			upper(title) like '%' || upper(#{searchWord}) || '%'
			or upper(contents) like '%' || upper(#{searchWord}) || '%'
			or memberid = #{searchWord}
		</if>
	</where>	
	</if>
</select>

<!-- 글 1개 읽기 -->
<select id="selectBoard" parameterType="int" resultType="Board">
	select
		boardnum
		, memberid
		, title
		, contents
		, hits
		, to_char(inputdate, 'yy/mm/dd') inputdate
		, originalfile
		, savedfile
	from 
		spring5_board
	where
		boardnum = #{boardnum}
</select>

<!-- 전달된 번호의 글 조회수를 1 더하기 -->
<update id="add" parameterType="int">
	update
		spring5_board
	set
		hits = hits + 1
	where 
		boardnum = #{boardnum}
</update>

<!-- 글 삭제 -->
<delete id="deleteBoard" parameterType="Board">
	delete
	from
		spring5_board
	where
		boardnum = #{boardnum}
		and memberid = #{memberid}
</delete>

<!-- 글 수정 -->
<update id="updateBoard" parameterType="Board">
	update
		spring5_board
	set
		title = #{title}
		, contents = #{contents}
		<if test="originalfile != null and savedfile != null">
		, originalfile = #{originalfile}
		, savedfile = #{savedfile}
		</if>
	where
		boardnum = #{boardnum}
		and memberid = #{memberid}
</update>

<!-- 리플 저장 -->
<insert id="insertReply" parameterType="Reply">
	insert 
	into 
		spring5_reply (
			replynum
			, boardnum
			, memberid
			, replytext
		)
	values (
			spring5_reply_seq.nextval
			, #{boardnum}
			, #{memberid}
			, #{replytext}
	)
</insert>

<!-- 한개의 글에 달린 리플 목록 읽기 -->
<select id="readReply" parameterType="int" resultType="Reply">
	select
		replynum
		, boardnum
		, memberid
		, replytext
		, to_char(inputdate, 'yy.mm.dd') inputdate 
	from 
		spring5_reply 
	where 
		boardnum=#{boardnum} order by replynum
</select>

<!-- 리플 삭제 -->
<delete id="deleteReply" parameterType="Reply">
	delete from 
		spring5_reply 
	where 
		replynum = #{replynum} 
		and memberid = #{memberid}
</delete>

</mapper>

